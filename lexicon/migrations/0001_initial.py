# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-04 10:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Kanji',
            fields=[
                ('kanji', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('gloss', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['kanji'],
                'verbose_name_plural': 'kanji',
            },
        ),
        migrations.CreateModel(
            name='KanjiProb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('symbol', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
            options={
                'ordering': ['-pdf', 'symbol'],
                'abstract': False,
                'verbose_name': 'probability of kanji',
                'verbose_name_plural': 'distribution of kanji',
            },
        ),
        migrations.CreateModel(
            name='KanjiReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.CharField(db_index=True, max_length=21)),
                ('reading_type', models.CharField(choices=[(b'o', b'on'), (b'k', b'kun')], max_length=1)),
                ('kanji', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_set', to='lexicon.Kanji')),
            ],
            options={
                'ordering': ['kanji', 'reading'],
            },
        ),
        migrations.CreateModel(
            name='KanjiReadingCondProb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('condition', models.CharField(db_index=True, max_length=50)),
                ('symbol', models.CharField(db_index=True, max_length=50)),
            ],
            options={
                'ordering': ['condition', '-pdf', 'symbol'],
                'abstract': False,
                'verbose_name_plural': 'distribution of readings given kanji',
                'verbose_name': 'probability of reading given kanji',
            },
        ),
        migrations.CreateModel(
            name='KanjiReadingProb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('symbol', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
            options={
                'ordering': ['-pdf', 'symbol'],
                'abstract': False,
                'verbose_name': 'probability of reading',
                'verbose_name_plural': 'distribution of readings',
            },
        ),
        migrations.CreateModel(
            name='Lexeme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LexemeReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading', models.CharField(db_index=True, max_length=60)),
                ('priority_codes', models.CharField(blank=True, max_length=60, null=True)),
                ('lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_set', to='lexicon.Lexeme')),
            ],
        ),
        migrations.CreateModel(
            name='LexemeReadingProb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('condition', models.CharField(db_index=True, max_length=50)),
                ('symbol', models.CharField(db_index=True, max_length=50)),
            ],
            options={
                'ordering': ['condition', '-pdf', 'symbol'],
                'abstract': False,
                'verbose_name_plural': 'distribution of readings given lexeme',
                'verbose_name': 'probability of reading given lexeme',
            },
        ),
        migrations.CreateModel(
            name='LexemeSense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gloss', models.CharField(max_length=500)),
                ('is_first_sense', models.BooleanField()),
                ('lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sense_set', to='lexicon.Lexeme')),
            ],
        ),
        migrations.CreateModel(
            name='LexemeSurface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface', models.CharField(db_index=True, max_length=60)),
                ('priority_codes', models.CharField(blank=True, help_text=b'Any annotations the original dictionary provided', max_length=60, null=True)),
                ('has_kanji', models.BooleanField(help_text=b'Does this entry contain any kanji characters?')),
                ('in_lexicon', models.BooleanField(default=True, help_text=b'Is this part of the original lexicon?')),
                ('lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surface_set', to='lexicon.Lexeme')),
            ],
        ),
        migrations.CreateModel(
            name='LexemeSurfaceProb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('symbol', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
            options={
                'ordering': ['-pdf', 'symbol'],
                'abstract': False,
                'verbose_name': 'probability of lexeme surface',
                'verbose_name_plural': 'distribution of lexeme surfaces',
            },
        ),
        migrations.AlterUniqueTogether(
            name='lexemereadingprob',
            unique_together=set([('condition', 'symbol')]),
        ),
        migrations.AlterUniqueTogether(
            name='kanjireadingcondprob',
            unique_together=set([('condition', 'symbol')]),
        ),
        migrations.AlterUniqueTogether(
            name='lexemesurface',
            unique_together=set([('lexeme', 'surface')]),
        ),
        migrations.AlterUniqueTogether(
            name='lexemereading',
            unique_together=set([('lexeme', 'reading')]),
        ),
        migrations.AlterUniqueTogether(
            name='kanjireading',
            unique_together=set([('reading', 'kanji', 'reading_type')]),
        ),
    ]

# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-04 10:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lexicon', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alignment', models.CharField(max_length=100)),
                ('reading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lexicon.LexemeReading')),
                ('surface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lexicon.LexemeSurface')),
            ],
            options={
                'verbose_name_plural': 'lexeme reading segments',
            },
        ),
        migrations.CreateModel(
            name='ErrorDist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'error distribution',
                'verbose_name_plural': 'error distributions',
            },
        ),
        migrations.CreateModel(
            name='ErrorPdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('condition', models.CharField(db_index=True, max_length=50)),
                ('symbol', models.CharField(db_index=True, max_length=50)),
                ('dist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='density', to='user_model.ErrorDist')),
            ],
            options={
                'verbose_name_plural': 'error density',
            },
        ),
        migrations.CreateModel(
            name='PartialKanji',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kanji', models.ForeignKey(help_text=b'The kanji itself.', on_delete=django.db.models.deletion.CASCADE, to='lexicon.Kanji')),
                ('reading_set', models.ManyToManyField(help_text=b'The readings in this syllabus.', to='lexicon.KanjiReading')),
            ],
            options={
                'ordering': ['syllabus', 'kanji'],
                'verbose_name_plural': 'partial kanji',
            },
        ),
        migrations.CreateModel(
            name='PartialLexeme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lexeme', models.ForeignKey(help_text=b'The word under consideration.', on_delete=django.db.models.deletion.CASCADE, to='lexicon.Lexeme')),
                ('reading_set', models.ManyToManyField(to='lexicon.LexemeReading')),
                ('sense_set', models.ManyToManyField(to='lexicon.LexemeSense')),
                ('surface_set', models.ManyToManyField(to='lexicon.LexemeSurface')),
            ],
            options={
                'ordering': ['syllabus', 'lexeme'],
            },
        ),
        migrations.CreateModel(
            name='PriorDist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'prior distribution',
                'verbose_name_plural': 'prior distributions',
            },
        ),
        migrations.CreateModel(
            name='PriorPdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FloatField()),
                ('cdf', models.FloatField()),
                ('condition', models.CharField(db_index=True, max_length=50)),
                ('symbol', models.CharField(db_index=True, max_length=50)),
                ('dist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='density', to='user_model.PriorDist')),
            ],
            options={
                'verbose_name_plural': 'prior density',
            },
        ),
        migrations.CreateModel(
            name='SenseNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(max_length=300)),
                ('partial_lexeme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_model.PartialLexeme')),
            ],
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(help_text=b'A unique name for this syllabus.', max_length=100, unique=True)),
            ],
            options={
                'ordering': ['tag'],
                'verbose_name_plural': 'syllabi',
            },
        ),
        migrations.AddField(
            model_name='priordist',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_model.Syllabus'),
        ),
        migrations.AddField(
            model_name='partiallexeme',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_model.Syllabus'),
        ),
        migrations.AddField(
            model_name='partialkanji',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_model.Syllabus'),
        ),
        migrations.AddField(
            model_name='alignment',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user_model.Syllabus'),
        ),
        migrations.AlterUniqueTogether(
            name='priorpdf',
            unique_together=set([('dist', 'condition', 'symbol')]),
        ),
        migrations.AlterUniqueTogether(
            name='priordist',
            unique_together=set([('syllabus', 'tag')]),
        ),
        migrations.AlterUniqueTogether(
            name='partiallexeme',
            unique_together=set([('syllabus', 'lexeme')]),
        ),
        migrations.AlterUniqueTogether(
            name='partialkanji',
            unique_together=set([('syllabus', 'kanji')]),
        ),
        migrations.AlterUniqueTogether(
            name='errorpdf',
            unique_together=set([('dist', 'condition', 'symbol')]),
        ),
        migrations.AlterUniqueTogether(
            name='errordist',
            unique_together=set([('user', 'tag')]),
        ),
        migrations.AlterUniqueTogether(
            name='alignment',
            unique_together=set([('syllabus', 'reading', 'surface', 'alignment')]),
        ),
    ]
